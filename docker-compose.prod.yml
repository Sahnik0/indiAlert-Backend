# Production Docker Compose Configuration
version: '3.8'

services:
  satellite-monitoring:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: satellite_monitoring_prod
    restart: always
    ports:
      - "${JUPYTER_PORT:-8888}:8888"
    volumes:
      - .:/app
      - satellite_results:/app/gee_results
      - satellite_data:/app/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PROJECT_ID=${PROJECT_ID}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - CURRENT_USER=${CURRENT_USER}
      - EMAIL_COOLDOWN=${EMAIL_COOLDOWN}
      - MONITORING_INTERVAL=${MONITORING_INTERVAL}
      - NDVI_CHANGE_THRESHOLD=${NDVI_CHANGE_THRESHOLD}
      - MNDWI_CHANGE_THRESHOLD=${MNDWI_CHANGE_THRESHOLD}
      - NDBI_CHANGE_THRESHOLD=${NDBI_CHANGE_THRESHOLD}
      - MIN_AREA_PIXELS=${MIN_AREA_PIXELS}
      - CLOUD_COVER_LIMIT=${CLOUD_COVER_LIMIT}
      - CONFIDENCE_THRESHOLD=${CONFIDENCE_THRESHOLD}
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-}
      - JUPYTER_PASSWORD=${JUPYTER_PASSWORD:-}
    env_file:
      - .env
    networks:
      - monitoring_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-4g}
          cpus: '${CPU_LIMIT:-2}'
        reservations:
          memory: 1g
          cpus: '0.5'

  nginx:
    image: nginx:alpine
    container_name: monitoring_proxy_prod
    restart: always
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      satellite-monitoring:
        condition: service_healthy
    networks:
      - monitoring_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring_network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    networks:
      - monitoring_network
    profiles:
      - monitoring

volumes:
  satellite_results:
    driver: local
  satellite_data:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  monitoring_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
